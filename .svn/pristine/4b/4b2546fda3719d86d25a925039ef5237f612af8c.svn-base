//
//  ChooseCityViewController.m
//  KuaiCare
//
//  Created by macbook user on 16/10/28.
//  Copyright © 2016年 macbook user. All rights reserved.
//

#import "ChooseCityViewController.h"
#import <CoreLocation/CoreLocation.h>
#import "ATLHeadView.h"
#import "ZYPinYinSearch.h"
#import "UIView+Frame.h"
@interface ChooseCityViewController ()<CLLocationManagerDelegate,UITableViewDataSource,UITableViewDelegate,UISearchBarDelegate,UISearchDisplayDelegate>

@property(nonatomic,strong) CLLocationManager*manger;

@property (nonatomic, strong) UITableView *topTableView;

/**通过plist文件获取城市列表*/
@property (nonatomic, strong) NSMutableArray *dataArray;
/**热点城市*/
@property (nonatomic, strong) NSMutableArray *hotArray;

/**城市列表*/
@property (nonatomic, strong) NSMutableArray *cityArray;

@property (nonatomic, strong) NSMutableArray *sectionArray;

//@property (nonatomic, strong) UISearchDisplayController *searchDisplayController;//搜索VC

@property (nonatomic, strong) NSMutableArray *searchResultArr;

@property (nonatomic, strong) UISearchBar *searchBar;

@property (nonatomic, strong) NSMutableArray *allCtity;

@property (assign, nonatomic) BOOL isSearch;

@end

@implementation ChooseCityViewController

static NSString *const customID = @"custom";

static NSString *const headID = @"head";

- (void)viewDidLoad {
    [super viewDidLoad];
    [self.navigationController.navigationBar setBarTintColor:RGB(38, 107, 255)];
    [self.navigationController.navigationBar setTitleTextAttributes:
     @{NSFontAttributeName:[UIFont systemFontOfSize:19],
       NSForegroundColorAttributeName:[UIColor whiteColor]}];
    self.navigationItem.title = @"选择城市";
    self.navigationItem.leftBarButtonItem = [UIBarButtonItem withBarItem:@"icon-白色返回" name:@"" target:self action:@selector(leftClick)];
    self.navigationItem.rightBarButtonItem = [UIBarButtonItem withBarItem:@"icon_m_dd_unselect" name:@"" target:self action:@selector(rightClick)];
    
    
    self.sectionArray = [NSMutableArray array];
    self.allCtity = [NSMutableArray array];
    dispatch_async(dispatch_get_global_queue(0, 0), ^{
        for (NSDictionary *dic in self.dataArray) {
            if (![dic[@"title"] isEqualToString:@"热门"]) {
                
                for (NSString *cityName in dic[@"cities"]){
                    
                    [self.allCtity addObject:cityName];
                    
                }
                [self.cityArray addObject :dic[@"cities"]];
                //                NSLog(@"====%ld ＝＝＝＝%ld",self.cityArray.count,self.allCtity.count);
                [self.sectionArray addObject:dic[@"title"]];
                
                
            }else{
                
                self.hotArray =  dic[@"cities"];
            }
        }
        
        dispatch_async(dispatch_get_main_queue(), ^{
            
            [self setUp];
            [self.view addSubview:self.searchBar];
            [self.view addSubview:self.topTableView];
            
            
        });
        
    });
    
    _searchResultArr=[NSMutableArray array];
}

#pragma mark - setUpView

- (UISearchBar *)searchBar{
    
    if (!_searchBar) {
        _searchBar=[[UISearchBar alloc]initWithFrame:CGRectMake(0, 64, [UIScreen mainScreen].bounds.size.width, 44)];
        [_searchBar setBackgroundImage:[UIImage imageNamed:@"ic_searchBar_bgImage"]];
        [_searchBar sizeToFit];
        [_searchBar setPlaceholder:@"请输入城市名称或首字母查询"];
        [_searchBar.layer setBorderWidth:0.5];
        [_searchBar.layer setBorderColor:[UIColor colorWithRed:229.0/255 green:229.0/255 blue:229.0/255 alpha:1].CGColor];
        [_searchBar setAutocapitalizationType:UITextAutocapitalizationTypeNone];
        [_searchBar setDelegate:self];
        
    }
    return _searchBar;
    
}

-(NSMutableArray*)dataArray{
    
    if (_dataArray == nil) {
        
        _dataArray  = (NSMutableArray*)[[NSArray alloc]initWithContentsOfFile:[[NSBundle mainBundle]pathForResource:@"cityGroups" ofType:@"plist"]];
    }
    return _dataArray;
    
}

-(NSMutableArray*)hotArray{
    
    if (_hotArray == nil) {
        
        _hotArray = [NSMutableArray array];
    }
    return _hotArray;
    
}
-(NSMutableArray*)cityArray{
    
    if (_cityArray == nil) {
        
        _cityArray = [NSMutableArray array];

    }
    return _cityArray;
    
}
-(UITableView*)topTableView{
    
    if (_topTableView == nil) {
        
        _topTableView = [[UITableView alloc]initWithFrame:CGRectMake(0, 64, KCWIDTH, KCHEIGHT-64)];
        _topTableView.y = 64;
        _topTableView.delegate = self;
        _topTableView.dataSource = self;
        //        _topTableView.separatorStyle = UITableViewCellSeparatorStyleNone;
        _topTableView.sectionHeaderHeight = [UIFont systemFontOfSize:16].lineHeight+10;
        [_topTableView registerClass:[UITableViewCell class] forCellReuseIdentifier:customID];
        [_topTableView registerClass:[ATLHeadView class] forHeaderFooterViewReuseIdentifier:headID];
        
         _topTableView.tableHeaderView=self.searchBar;
        
    }
    return _topTableView;
    
}
#pragma  mark - UITableViewDataSource

-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    
    if(self.isSearch) return 1;
    return self.sectionArray.count  + 2;
    
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    
    if (self.isSearch) {
        
        return self.searchResultArr.count;
    }else{
        
        if(section == 0  ) {
            return 1;
            
        }else if(section == 1 ) {
            
            return self.hotArray.count;
            
        }else{
            
            NSMutableArray *array = self.cityArray[section-2];
            
            return array.count;
        }
    }
    
}

-(UITableViewCell*)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    
    UITableViewCell *cell = [self.topTableView dequeueReusableCellWithIdentifier:customID];
    
    // 修改index-list（右侧）的背景
    for(UIView *view in [tableView subviews])
    {
        
        if([[[view class] description] isEqualToString:@"UITableViewIndex"])
        {
            //view.backgroundColor = [UIColor redColor];
            [view performSelector:@selector(setIndexColor:) withObject:RGB(38, 107, 255)];
            
        }
    }
    if (self.isSearch) {
        
        cell.textLabel.text = self.searchResultArr[indexPath.row];
        
        
    }else{
        
        if (indexPath.section == 0) {
            cell.textLabel.text  = @"南京";
            
        }else if (indexPath.section == 1){
            cell.textLabel.text = self.hotArray[indexPath.row];
            
        }else{
            
            cell.textLabel.text = self.cityArray[indexPath.section -2][indexPath.row];
            
        }
        
    }
    
    
    return cell;
    
    
    
}

-(UIView*)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
    
    ATLHeadView *headerView = [tableView dequeueReusableHeaderFooterViewWithIdentifier:headID];
    
    
    if (section == 0) {
        
        headerView.textLabel.text = @"你所在的地区";
        
    }else if (section == 1) {
        
        headerView.textLabel.text = @"热点城市";
        
    }else{
        headerView.textLabel.text = self.sectionArray[section - 2];
    }
    
    
    return headerView;
}

- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)tableView{
    
    //默认情况下 section Title根据顺序对应 section 【如果不写tableView: sectionForSectionIndexTitle: atIndex:的话】
    return self.sectionArray;
    
}
- (NSInteger)tableView:(UITableView *)tableView sectionForSectionIndexTitle:(NSString *)title atIndex:(NSInteger)index{
    
    //传入 section title 和index 返回其应该对应的session序号。
    //一般不需要写 默认section index 顺序与section对应。除非 你的section index数量或者序列与section不同才用修改
    return index  + 2;
}

-(void)setIndexColor:(UIColor*)color{
    
    //   color = [UIColor redColor];
}

#pragma mark - 系统定位
-(void)setUp{
    
    self.manger = [[CLLocationManager alloc]init];
    self.manger.distanceFilter = 100.f;//多远获取一次
    self.manger.delegate = self;
    self.manger.desiredAccuracy = kCLLocationAccuracyBestForNavigation;
    
    if ([CLLocationManager locationServicesEnabled]) {
        
        [self.manger  startUpdatingLocation];
        
        if ([[[UIDevice currentDevice]systemVersion]floatValue]>= 8) {
            
            // 手动开启
            [_manger requestAlwaysAuthorization];
            [_manger requestWhenInUseAuthorization];
            
        }else{
            NSLog(@"版本小于8.0");
        }
    }
    
    
}
//ios8以后要用户手动授权
-(void)locationManager:(CLLocationManager *)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status{
    if (status==kCLAuthorizationStatusNotDetermined) {
        NSLog(@"等待用户授权");
    }else if (status==kCLAuthorizationStatusAuthorizedAlways||status==kCLAuthorizationStatusAuthorizedWhenInUse){
        NSLog(@"授权成功");
        [self.manger startUpdatingLocation];
    }
}

-(void)locationManager:(CLLocationManager *)manager didUpdateLocations:(NSArray<CLLocation *> *)locations{
    
    CLLocation *location = [locations lastObject];
    // 获取当前所在的城市
    CLGeocoder *geo = [CLGeocoder new];
    [geo reverseGeocodeLocation:location completionHandler:^(NSArray<CLPlacemark *> * _Nullable placemarks, NSError * _Nullable error) {
        
        if (error == nil && [placemarks count ]> 0) {
            
            // 地标属性
            CLPlacemark *placeMarks = [placemarks objectAtIndex:0];
            NSLog(@"====%@",placeMarks.locality);
            
        }
        
        
        
        
    }];
    
}

#pragma mark searchBar delegate

- (void)searchBarTextDidBeginEditing:(UISearchBar *)searchBar{
    
    searchBar.showsCancelButton = YES;
    
    NSArray *subViews = [(searchBar.subviews[0]) subviews];
    
    for (id view in subViews) {
        
        if ([view isKindOfClass:[UIButton class]]) {
            NSLog(@"取消按钮====%@",view);
            //    UINavigationButton
            UIButton* cancelbutton = (UIButton* )view;
            
            [cancelbutton setTitle:@"取消" forState:UIControlStateNormal];
            //            [cancelbutton setTitleColor:[UIColor redColor] forState:UIControlStateNormal];
            //            [cancelbutton setTitleColor:[UIColor redColor] forState:UIControlStateHighlighted];
            break;
            
        }
    }
    
}

- (void)searchBar:(UISearchBar *)searchBar textDidChange:(NSString *)searchText{
    
    [self.searchResultArr removeAllObjects];
    NSArray *ary = [NSArray new];
    ary = [ZYPinYinSearch searchWithOriginalArray:self.allCtity andSearchText:searchText andSearchByPropertyName:@""];
    NSLog(@"=====%@",ary);
    if (searchText.length == 0) {
        [self.searchResultArr addObjectsFromArray:self.allCtity];
        _isSearch = NO;
    }else {
        [self.searchResultArr addObjectsFromArray:ary];
        _isSearch = YES;
    }
    [self.topTableView reloadData];
}
- (void)searchBarCancelButtonClicked:(UISearchBar *)searchBar {
    _searchBar.showsCancelButton = NO;
    [_searchBar resignFirstResponder];
    _searchBar.text = @"";
    _isSearch = NO;
    [self.topTableView reloadData];
}
-(void)leftClick
{
    [self.navigationController popToRootViewControllerAnimated:YES];
}
-(void)rightClick
{
    
}

@end


